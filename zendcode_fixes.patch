From 7cffdc330842b680c48df5dc73652fa51c813bf1 Mon Sep 17 00:00:00 2001
From: Matthew Gamble <git@matthewgamble.net>
Date: Sun, 8 May 2016 17:14:24 +1000
Subject: Fix handling of FQCNs in method parameters

Previously, MethodScanner did not detect a leading T_NS_SEPARATOR
character for a type name. By failing to detect it, it passes it to
ParameterScanner without it, who then dutifully resolves the classname
as if it was relative to the current namespace.

This is obviously incorrect behaviour, and it is fixed with this patch.
---
 src/Scanner/MethodScanner.php      |  7 +++++++

From a306dc0dc5ec5a4e12821be9e628fac3bfb6ce7e Mon Sep 17 00:00:00 2001
From: Matthew Gamble <git@matthewgamble.net>
Date: Sun, 8 May 2016 12:03:22 +1000
Subject: Resolve issues with traits in ClassScanner

- Only the first use statement would be accounted for when getting lists
  of traits, due to unnecessary break statements at the end of the loop.
  Fixes #58
- If one of the methods touched by this commit, such as getTraitNames(),
  or getTraits(), which calls getTraitNames(), was called as the first
  action on this class, no traits would be returned, due to the fact
  that scan() was not called at the start of the method. Fixes #57
---
 src/Scanner/ClassScanner.php                | 12 ++++++++----
 create mode 100644 test/TestAsset/BazTrait.php

diff --git a/src/Scanner/ClassScanner.php b/src/Scanner/ClassScanner.php
index a08b367..1ca7fd3 100644
--- a/src/Scanner/ClassScanner.php
+++ b/src/Scanner/ClassScanner.php
@@ -547,6 +547,8 @@ class ClassScanner implements ScannerInterface
      */
     public function getTraitNames()
     {
+        $this->scan();
+
         $return = [];
         foreach ($this->infos as $info) {
             if ($info['type'] !== 'use') {
@@ -562,7 +564,6 @@ class ClassScanner implements ScannerInterface
                     $return[] = $traitName;
                 }
             }
-            break;
         }
 
         return $return;
@@ -575,6 +576,8 @@ class ClassScanner implements ScannerInterface
      */
     public function getTraitAliases()
     {
+        $this->scan();
+
         $return = [];
         foreach ($this->infos as $info) {
             if ($info['type'] !== 'use') {
@@ -598,7 +601,6 @@ class ClassScanner implements ScannerInterface
                     $return[$alias['alias']] = $trait . '::' . $method;
                 }
             }
-            break;
         }
 
         return $return;
@@ -612,6 +614,8 @@ class ClassScanner implements ScannerInterface
      */
     protected function getVisibilityForAlias($aliasName)
     {
+        $this->scan();
+
         $return = null;
         foreach ($this->infos as $info) {
             if ($info['type'] !== 'use') {
@@ -632,7 +636,6 @@ class ClassScanner implements ScannerInterface
                     }
                 }
             }
-            break;
         }
 
         return $return;
@@ -645,6 +648,8 @@ class ClassScanner implements ScannerInterface
      */
     protected function getBlockedTraitMethods()
     {
+        $this->scan();
+
         $return = [];
         foreach ($this->infos as $info) {
             if ($info['type'] !== 'use') {
@@ -668,7 +673,6 @@ class ClassScanner implements ScannerInterface
                     $return[] = $trait . '::' . $method;
                 }
             }
-            break;
         }
 
         return $return;
diff --git a/src/Scanner/MethodScanner.php b/src/Scanner/MethodScanner.php
index bea52ec..315a592 100644
--- a/src/Scanner/MethodScanner.php
+++ b/src/Scanner/MethodScanner.php
@@ -522,6 +522,13 @@ class MethodScanner implements ScannerInterface
                 goto SCANNER_CONTINUE_SIGNATURE;
                 // goto (no break needed);
 
+            case T_NS_SEPARATOR:
+                if (!isset($infos[$infoIndex])) {
+                    $MACRO_INFO_START();
+                }
+                goto SCANNER_CONTINUE_SIGNATURE;
+                // goto (no break needed);
+
             case T_VARIABLE:
             case T_STRING:
                 if ($tokenType === T_STRING && $parentCount === 0) {

